import sys
from datetime import datetime

from charge_bot.optimize import determine_slots, optimize

sys.path.append("..")


def test_determine_slots():
    assert (
        determine_slots(
            datetime(year=2020, month=1, day=1, hour=20),
            22,  # We want to charge 22 kwh
            5.0,  # We charge 5 kwh
            [
                (datetime(year=2020, month=1, day=1, hour=20), 0.1),
                (datetime(year=2020, month=1, day=1, hour=21), 0.1),
                (datetime(year=2020, month=1, day=1, hour=22), 0.1),
                (datetime(year=2020, month=1, day=2, hour=23), 0.1),
                (datetime(year=2020, month=1, day=2, hour=0), 0.2),
                (datetime(year=2020, month=1, day=2, hour=1), 0.5),
                (datetime(year=2020, month=1, day=2, hour=2), 0.6),
            ],
        )
        == """╒═════════════════════╤═════════════╤═══════════════╤═══════════════╕
│ Slot start          │   Price kwh │ Est. Charge   │   Total price │
╞═════════════════════╪═════════════╪═══════════════╪═══════════════╡
│ 2020-01-01 20:00:00 │     0.27225 │ 5.0 kwh       │       1.36125 │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-01 21:00:00 │     0.27225 │ 5.0 kwh       │       1.36125 │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-01 22:00:00 │     0.27225 │ 5.0 kwh       │       1.36125 │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 00:00:00 │     0.39325 │ 2.0 kwh       │       0.7865  │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 01:00:00 │     0.75625 │ 0.0 kwh       │       0       │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 02:00:00 │     0.87725 │ 0.0 kwh       │       0       │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 23:00:00 │     0.27225 │ 5.0 kwh       │       1.36125 │
╘═════════════════════╧═════════════╧═══════════════╧═══════════════╛"""
    )


def test_determine_slots_now_expensive():
    assert (
        determine_slots(
            datetime(year=2020, month=1, day=1, hour=20),
            22,  # We want to charge 22 kwh
            5.0,  # We charge 5 kwh
            [
                (datetime(year=2020, month=1, day=1, hour=20), 0.6),  # Right now it is rather expensive
                (datetime(year=2020, month=1, day=1, hour=21), 0.4),
                (datetime(year=2020, month=1, day=1, hour=22), 0.1),
                (datetime(year=2020, month=1, day=1, hour=23), 0.1),
                (datetime(year=2020, month=1, day=2, hour=0), 0.1),
                (datetime(year=2020, month=1, day=2, hour=1), 0.2),
                (datetime(year=2020, month=1, day=2, hour=2), 0.5),
                (datetime(year=2020, month=1, day=2, hour=3), 0.6),
            ],
        )
        == """╒═════════════════════╤═════════════╤═══════════════╤═══════════════╕
│ Slot start          │   Price kwh │ Est. Charge   │   Total price │
╞═════════════════════╪═════════════╪═══════════════╪═══════════════╡
│ 2020-01-01 20:00:00 │     0.87725 │ 0.0 kwh       │       0       │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-01 21:00:00 │     0.63525 │ 2.0 kwh       │       1.2705  │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-01 22:00:00 │     0.27225 │ 5.0 kwh       │       1.36125 │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-01 23:00:00 │     0.27225 │ 5.0 kwh       │       1.36125 │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 00:00:00 │     0.27225 │ 5.0 kwh       │       1.36125 │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 01:00:00 │     0.39325 │ 5.0 kwh       │       1.96625 │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 02:00:00 │     0.75625 │ 0.0 kwh       │       0       │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 03:00:00 │     0.87725 │ 0.0 kwh       │       0       │
╘═════════════════════╧═════════════╧═══════════════╧═══════════════╛"""
    )  # Right now we don't want to charge


def test_optimize_connected():
    assert (
        optimize(
            datetime(year=2020, month=1, day=1, hour=20),
            90 - 22,
            [(datetime(year=2020, month=1, day=1, hour=20), 0.1)],
        )
        == """╒═════════════════════╤═════════════╤═══════════════╤═══════════════╕
│ Slot start          │   Price kwh │ Est. Charge   │   Total price │
╞═════════════════════╪═════════════╪═══════════════╪═══════════════╡
│ 2020-01-01 20:00:00 │     0.27225 │ 11.0 kwh      │       2.99475 │
╘═════════════════════╧═════════════╧═══════════════╧═══════════════╛"""
    )


def test_optimize_charging():
    assert (
        optimize(
            datetime(year=2020, month=1, day=1, hour=20),
            90 - 22,
            [
                (datetime(year=2020, month=1, day=1, hour=20), 0.1),
                (datetime(year=2020, month=1, day=1, hour=21), 0.1),
                (datetime(year=2020, month=1, day=1, hour=22), 0.1),
                (datetime(year=2020, month=1, day=2, hour=23), 0.1),
                (datetime(year=2020, month=1, day=2, hour=0), 0.2),
                (datetime(year=2020, month=1, day=2, hour=1), 0.5),
                (datetime(year=2020, month=1, day=2, hour=2), 0.6),
            ],
        )
        == """╒═════════════════════╤═════════════╤═══════════════╤═══════════════╕
│ Slot start          │   Price kwh │ Est. Charge   │   Total price │
╞═════════════════════╪═════════════╪═══════════════╪═══════════════╡
│ 2020-01-01 20:00:00 │     0.27225 │ 11.0 kwh      │       2.99475 │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-01 21:00:00 │     0.27225 │ 0.0 kwh       │       0       │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-01 22:00:00 │     0.27225 │ 0.0 kwh       │       0       │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 00:00:00 │     0.39325 │ 0.0 kwh       │       0       │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 01:00:00 │     0.75625 │ 0.0 kwh       │       0       │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 02:00:00 │     0.87725 │ 0.0 kwh       │       0       │
├─────────────────────┼─────────────┼───────────────┼───────────────┤
│ 2020-01-02 23:00:00 │     0.27225 │ 0.0 kwh       │       0       │
╘═════════════════════╧═════════════╧═══════════════╧═══════════════╛"""
    )
